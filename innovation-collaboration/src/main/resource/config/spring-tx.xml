<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/jdbc.properties</value>
			</list>
		</property>
	</bean>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxIdle" value="2"></property>
		<property name="maxActive" value="120"></property>
		<property name="maxWait" value="60"></property>
		<property name="initialSize" value="20"></property>
		<property name="testOnBorrow" value="true"></property>
		<property name="testOnReturn" value="true"></property>
		<property name="validationQuery" value="select 1=1 from c_user"></property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		lazy-init="true">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="mappingResources">
			<list>
				<value>config/hbm.xml</value>
			</list>
		</property>
		<!-- <property name="entityInterceptor"><ref bean="auditInterceptor"/></property> -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.query.substitutions">true 'Y', false 'N'</prop>
				<prop key="hibernate.max_fetch_depth">2</prop>
				<prop key="hibernate.connection.pool_size">5</prop>
				<prop key="hibernate.dbcp.initialSize">5</prop>
				<prop key="hibernate.dbcp.maxWait">10000</prop>
				<!-- <prop key="hibernate.show_sql">true</prop> -->
				<prop key="hibernate.jdbc.batch_size">1000</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<!--<prop key="hibernate.hbm2ddl.auto">update</prop> <prop key="hibernate.connection.autocommit">false</prop> 
					<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JTATransactionFactory</prop> -->
				<prop key="hibernate.connection.release_mode">auto</prop>
				<!-- Begin Hibernate Global Caching Configuration -->
				<!-- To turn second level caching (i.e. JVM-wide, versus Session-specific), 
					set the following to false. -->
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
				<prop key="hibernate.cache.use_structured_entries">true</prop>
				<!-- End Hibernate Global Caching Configuration -->
			</props>
		</property>
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="transactionBase"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		lazy-init="true" abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
				<prop key="get*">readOnly</prop>
				<prop key="find*">readOnly</prop>
				<prop key="retrieve*">readOnly</prop>
			</props>
		</property>
	</bean>
</beans>
