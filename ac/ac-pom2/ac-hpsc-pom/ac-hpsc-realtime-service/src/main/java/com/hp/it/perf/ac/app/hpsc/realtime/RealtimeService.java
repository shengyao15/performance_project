package com.hp.it.perf.ac.app.hpsc.realtime;

import java.util.Collection;
import java.util.Map;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.hp.it.perf.ac.common.realtime.GranularityType;
import com.hp.it.perf.ac.common.realtime.MessageBean;
import com.hp.it.perf.ac.common.realtime.RealTimeBean;
import com.hp.it.perf.ac.core.AcService;

public interface RealtimeService extends AcService {

	public RealTimeBean getDataById(String id);

	public Collection<RealTimeBean> getAllRealtimeData();

	public Collection<RealTimeBean> getDataByGranularity(
			GranularityType granularity);

	public Collection<RealTimeBean> getDataByValueType(int valueType);

	public Collection<RealTimeBean> getDataByCategoryAndFeatureType(
			int category, int featureType);

	public void addData(RealTimeBean data);

	public void addData(Iterable<RealTimeBean> datas);

	public void addMessageData(Iterable<MessageBean> messageData);

	public void deleteData(RealTimeBean data);

	public void deleteData(String id);

	public void deleteData(Iterable<RealTimeBean> datas);

	public void deleteAll();

	public long getSize();

	public void deleteByGranularityAndStartTimeLessThan(int granularity,
			long startTime);

	public Page<RealTimeBean> getDataByGranularityAndValueTypeAndStartTimeGreaterThan(
			int granularity, int valueType, long startTime, Pageable pageable);
	
	public Page<RealTimeBean> getByGranularityAndValueTypeAndCategoryAndStartTimeGreaterThan(
			int granularity, int valueType, int category, long startTime, Pageable pageable);

	public Page<RealTimeBean> getByGranularityAndValueTypeAndCategoryAndFeatureTypeAndStartTimeGreaterThan(
			int granularity, int valueType, int category, int featureType,
			long startTime, Pageable pageable);

	public void saveLatestScore(RealTimeBean value);

	// id is generated by "valueType", "granulityType", "category",
	// "featureType", can use the help class RealTimeIdHelper to generate it.
	public RealTimeBean getLatestScore(int id);

	public Map<Integer, RealTimeBean> getAllScore();

	public Map<Integer, Long> getAllStartTime();

	public void updateGruanularityLatestStartTime(
			Map<Integer, Long> granularityLatestStartTime);

	public Long getGruanularityLatestStartTime(int granularity);

	// added for message bean
	public Page<MessageBean> getByGranularityAndCategoryAndFeatureTypeAndStartTimeGreaterThan(
			int granularity, int category, int featureType, long startTime,
			Pageable pageable);
}
